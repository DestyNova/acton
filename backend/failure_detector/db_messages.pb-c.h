/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: db_messages.proto */

#ifndef PROTOBUF_C_db_5fmessages_2eproto__INCLUDED
#define PROTOBUF_C_db_5fmessages_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _NodeStateMessage NodeStateMessage;
typedef struct _GossipMessage GossipMessage;
typedef struct _MembershipViewMessage MembershipViewMessage;
typedef struct _MembershipAgreementMessage MembershipAgreementMessage;
typedef struct _VectorClockMessage VectorClockMessage;


/* --- enums --- */


/* --- messages --- */

struct  _NodeStateMessage
{
  ProtobufCMessage base;
  /*
   * 0 - dead, 1 - ready, 2 - alive but not ready
   */
  int32_t status;
  int32_t node_id;
  int32_t rack_id;
  int32_t dc_id;
};
#define NODE_STATE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&node_state_message__descriptor) \
    , 0, 0, 0, 0 }


struct  _GossipMessage
{
  ProtobufCMessage base;
  NodeStateMessage *node_state;
  VectorClockMessage *vc;
};
#define GOSSIP_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gossip_message__descriptor) \
    , NULL, NULL }


struct  _MembershipViewMessage
{
  ProtobufCMessage base;
  size_t n_membership;
  NodeStateMessage **membership;
  VectorClockMessage *view_id;
};
#define MEMBERSHIP_VIEW_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&membership_view_message__descriptor) \
    , 0,NULL, NULL }


struct  _MembershipAgreementMessage
{
  ProtobufCMessage base;
  /*
   * 0 - PROPOSE, 1 - RESPONSE, 2 - NOTIFY, 3 - RETRY_LINK, 4 - NOTIFY_ACK
   */
  int32_t msg_type;
  /*
   * 0 - ACK, 1 - NACK, 2 - UNINIT
   */
  int32_t ack_status;
  MembershipViewMessage *view;
  VectorClockMessage *vc;
};
#define MEMBERSHIP_AGREEMENT_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&membership_agreement_message__descriptor) \
    , 0, 0, NULL, NULL }


struct  _VectorClockMessage
{
  ProtobufCMessage base;
  size_t n_ids;
  int32_t *ids;
  size_t n_counters;
  int64_t *counters;
};
#define VECTOR_CLOCK_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&vector_clock_message__descriptor) \
    , 0,NULL, 0,NULL }


/* NodeStateMessage methods */
void   node_state_message__init
                     (NodeStateMessage         *message);
size_t node_state_message__get_packed_size
                     (const NodeStateMessage   *message);
size_t node_state_message__pack
                     (const NodeStateMessage   *message,
                      uint8_t             *out);
size_t node_state_message__pack_to_buffer
                     (const NodeStateMessage   *message,
                      ProtobufCBuffer     *buffer);
NodeStateMessage *
       node_state_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   node_state_message__free_unpacked
                     (NodeStateMessage *message,
                      ProtobufCAllocator *allocator);
/* GossipMessage methods */
void   gossip_message__init
                     (GossipMessage         *message);
size_t gossip_message__get_packed_size
                     (const GossipMessage   *message);
size_t gossip_message__pack
                     (const GossipMessage   *message,
                      uint8_t             *out);
size_t gossip_message__pack_to_buffer
                     (const GossipMessage   *message,
                      ProtobufCBuffer     *buffer);
GossipMessage *
       gossip_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gossip_message__free_unpacked
                     (GossipMessage *message,
                      ProtobufCAllocator *allocator);
/* MembershipViewMessage methods */
void   membership_view_message__init
                     (MembershipViewMessage         *message);
size_t membership_view_message__get_packed_size
                     (const MembershipViewMessage   *message);
size_t membership_view_message__pack
                     (const MembershipViewMessage   *message,
                      uint8_t             *out);
size_t membership_view_message__pack_to_buffer
                     (const MembershipViewMessage   *message,
                      ProtobufCBuffer     *buffer);
MembershipViewMessage *
       membership_view_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   membership_view_message__free_unpacked
                     (MembershipViewMessage *message,
                      ProtobufCAllocator *allocator);
/* MembershipAgreementMessage methods */
void   membership_agreement_message__init
                     (MembershipAgreementMessage         *message);
size_t membership_agreement_message__get_packed_size
                     (const MembershipAgreementMessage   *message);
size_t membership_agreement_message__pack
                     (const MembershipAgreementMessage   *message,
                      uint8_t             *out);
size_t membership_agreement_message__pack_to_buffer
                     (const MembershipAgreementMessage   *message,
                      ProtobufCBuffer     *buffer);
MembershipAgreementMessage *
       membership_agreement_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   membership_agreement_message__free_unpacked
                     (MembershipAgreementMessage *message,
                      ProtobufCAllocator *allocator);
/* VectorClockMessage methods */
void   vector_clock_message__init
                     (VectorClockMessage         *message);
size_t vector_clock_message__get_packed_size
                     (const VectorClockMessage   *message);
size_t vector_clock_message__pack
                     (const VectorClockMessage   *message,
                      uint8_t             *out);
size_t vector_clock_message__pack_to_buffer
                     (const VectorClockMessage   *message,
                      ProtobufCBuffer     *buffer);
VectorClockMessage *
       vector_clock_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   vector_clock_message__free_unpacked
                     (VectorClockMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*NodeStateMessage_Closure)
                 (const NodeStateMessage *message,
                  void *closure_data);
typedef void (*GossipMessage_Closure)
                 (const GossipMessage *message,
                  void *closure_data);
typedef void (*MembershipViewMessage_Closure)
                 (const MembershipViewMessage *message,
                  void *closure_data);
typedef void (*MembershipAgreementMessage_Closure)
                 (const MembershipAgreementMessage *message,
                  void *closure_data);
typedef void (*VectorClockMessage_Closure)
                 (const VectorClockMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor node_state_message__descriptor;
extern const ProtobufCMessageDescriptor gossip_message__descriptor;
extern const ProtobufCMessageDescriptor membership_view_message__descriptor;
extern const ProtobufCMessageDescriptor membership_agreement_message__descriptor;
extern const ProtobufCMessageDescriptor vector_clock_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_db_5fmessages_2eproto__INCLUDED */
